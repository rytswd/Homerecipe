#!/usr/bin/env bash
set +o posix

###====: HOMERECIPE :============================================
###      Recipe to cook my $HOME
###==============================================================

#------: Main Logic :--------------------------------------------
# The logic is really simple - this "cook" executable
#   will kick off shell scripts under scripts/ directory.
#
# All the main business logic is under each script.
#------: Special Thanks :----------------------------------------
# Some of the base logic for this "cook" came from
#   the ideas of Homebrew https://github.com/Homebrew/brew
#----------------------------------------------------------------

quiet_cd() {
  cd "$@" >/dev/null || echo "Error: cd failed, could not locate the dir"
}
export HOMERECIPE_DIR
HOMERECIPE_DIR="$(quiet_cd "${0%/*}" && pwd -P)"
export HOMERECIPE_FILE="${HOMERECIPE_DIR%/}/${0##*/}"
export HOMERECIPE_SCRIPTS="${HOMERECIPE_DIR%/}/core/scripts/"
export HOMERECIPE_PREFIX="${HOMERECIPE_FILE%/*/*}"

case "$1" in
  h)          COOKWARE="prompt_help" ;;
  -h)         COOKWARE="prompt_help" ;;
  --h)        COOKWARE="prompt_help" ;;
  help)       COOKWARE="prompt_help" ;;
  debug)      COOKWARE="debug" ;;
  recipes)    COOKWARE="${HOMERECIPE_SCRIPTS}/cook-recipes.sh" ;;
  prep)       COOKWARE="${HOMERECIPE_SCRIPTS}/make-recipes.sh" ;;
  backup)     COOKWARE="${HOMERECIPE_SCRIPTS}/make-recipes.sh" ;;
  dotfiles)   COOKWARE="${HOMERECIPE_SCRIPTS}/map-dotfiles.sh" ;;
  all)        COOKWARE="${HOMERECIPE_SCRIPTS}/run-all.sh" ;;
  restore)    COOKWARE="${HOMERECIPE_SCRIPTS}/run-all.sh -f" ;;
  remove)     COOKWARE="${HOMERECIPE_SCRIPTS}/remove-defaults.sh" ;;
  check)      COOKWARE="${HOMERECIPE_SCRIPTS}/check-updates.sh" ;;

  custom)     COOKWARE="${HOMERECIPE_DIR}/custom/run-custom.sh"
esac
shift

debug() {
  echo "Debug information"
  echo
  echo "HOMERECIPE_DIR : $HOMERECIPE_DIR"
  echo "HOMERECIPE_FILE : $HOMERECIPE_FILE"
  echo "HOMERECIPE_SCRIPTS : $HOMERECIPE_SCRIPTS"
  echo "HOMERECIPE_PREFIX : $HOMERECIPE_PREFIX"
  echo "COOKWARE : $COOKWARE"
  echo "Extra Arg : $*"
}

prompt_help() {
  local help
  read -rd '' help <<-EOF
Homerecipe
Shell-crafted tool to help manage your \$HOME

  Main usage:
    cook recipes          -- cook recipes under $HOMERECIPE_DIR/recipes/ directory
    cook prep             -- make recipes, overriding the existing contents
    cook dotfiles [-f]    -- map dotfiles to $HOME

    cook all [-f]         -- cook recipes, map dotfiles,
                             kick off run-custom if exist,
                             and symlink .homerecipe

    cook remove           -- remove default recipes and dotfiles

  Custom usage:
    cook custom           -- kicks off $HOMERECIPE_DIR/misc/run-custom.sh
                             only if it exists

  Note:
    use -f with caution, you can delete existing dotfiles under \$HOME
EOF
  echo "$help"
}

if [[ -r $COOKWARE ]]
then
  $COOKWARE "$@"
elif [[ ! -z $COOKWARE ]]
then
  $COOKWARE
else
  echo "Error - specified command not found"
  echo ""
  prompt_help && exit 1
fi
